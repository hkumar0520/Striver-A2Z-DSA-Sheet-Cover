

class Solution {
public:
    string minWindow(string s, string t) {
        int n = s.size(), minLen = INT_MAX, minStart = -1;

        for(int i = 0; i<n; i++){
            vector<int> hash(256, 0);

            for(char ch: t)
                hash[ch]++;

            int counter = 0, tSize = t.size();

            for(int j = i; j<n; j++){
                if( hash[s[j]] > 0 )
                    counter++;
                
                hash[s[j]]--;

                if(counter == tSize){
                    int len = j-i+1;
                    if( len < minLen){
                        minLen = len;
                        minStart = i;
                        break;
                    }
                }
            }
        }
        return (minStart == -1) ? "": s.substr(minStart, minLen);
    }
};


Time Complexity = O(n*n)
Space Complexity = O(256);



#######################################################################

class Solution {
public:
    string minWindow(string s, string t) {
        int n = s.size(), minLen = INT_MAX, minStart = -1;
        int l = 0, r = 0, tSize = t.size(), counter = 0;
        vector<int> hash(256, 0);

        for(char ch: t)
            hash[ch]++;

        while(r<n){
            if(hash[s[r]] > 0)
                counter++;
            hash[s[r]]--;

            while(counter == tSize){
                int len = r-l+1;
                if(len < minLen){
                    minLen = len;
                    minStart = l;
                }

                hash[s[l]]++;
                if(hash[s[l]]>0)
                    counter--;
                l++;
            }
            r++;
        }
        
        return (minStart == -1) ? "": s.substr(minStart, minLen);
    }
};


Time complexity - O(2*n)
Space Complexity - O(256)