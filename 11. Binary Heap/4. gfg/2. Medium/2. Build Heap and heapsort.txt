https://www.geeksforgeeks.org/problems/heap-sort/1?page=1&category=Heap&difficulty=Medium&sortBy=submissions

class Solution {
  public:
  
    // log(N)
    void pushDown(vector<int>& arr, int i, int arrSize){
        int left = 2*i + 1;
        int right = 2*i + 2;
        int largest = i; 
        
        if(left < arrSize && arr[left] > arr[largest]){
            largest = left;
        }
        
        if(right < arrSize && arr[right] > arr[largest]){
            largest = right;
        }
        
        if(i != largest){
            swap(arr[i], arr[largest]);
            pushDown(arr, largest, arrSize);
        }
        
    }
    // Function to sort an array using Heap Sort.
    void heapSort(vector<int>& arr) {
        // code here
        
        int n = arr.size();
        // buildheap O(N)
        for(int i = (n/2)-1; i>=0 ; i--){
            // O(logN)
            pushDown(arr, i, n);
        }
        
        // O(N)
        for(int i = n-1; i>=0 ;i--){
            
            swap(arr[i], arr[0]);
            
            // O(logN)
            pushDown(arr, 0, i);
        }
    }
};

Time Complexity : N*logN + N*logN = O(N*logN)
Space Complexity: O(1)