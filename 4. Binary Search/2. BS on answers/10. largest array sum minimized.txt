


int f(vector<int> arr, int k, int mid) 
{
    int sum = 0, n = arr.size();
    for(int i=0;i<n;i++)
    {
        if(arr[i] > mid)
            return false;

        sum += arr[i];
        if(sum > mid)
        {
            sum = arr[i];
            k--;
        }
    }
    if(k>=1)    return true;

    return false;
}
int largestSubarraySumMinimized(vector<int> a, int k) {
    // Write Your Code Here
    if(k>a.size())  return -1;

    int lo = 1, hi = 0;
    for(auto u:a)
        hi += u;

    while(lo <= hi)
    {
        int mid = (lo + hi)/2;
        bool possible = f(a,k,mid);
        if(possible)
            hi = mid-1;
        else
            lo = mid+1;
    }
    return lo;
}

